<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Helpers</name>
  </assembly>
  <members>
    <member name="T:System.Web.Helpers.Chart">
      <summary>Displays data in the form of a graphical chart.</summary>
    </member>
    <member name="M:System.Web.Helpers.Chart.#ctor(System.Int32,System.Int32,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Helpers.Chart" /> class.</summary>
      <param name="width">The width, in pixels, of the complete chart image.</param>
      <param name="height">The height, in pixels, of the complete chart image.</param>
      <param name="theme">(Optional) The template (theme) to apply to the chart.</param>
      <param name="themePath">(Optional) The template (theme) path and file name to apply to the chart.</param>
    </member>
    <member name="M:System.Web.Helpers.Chart.AddLegend(System.String,System.String)">
      <summary>Adds a legend to the chart.</summary>
      <returns>The chart.</returns>
      <param name="title">The text of the legend title.</param>
      <param name="name">The unique name of the legend.</param>
    </member>
    <member name="M:System.Web.Helpers.Chart.AddSeries(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Collections.IEnumerable,System.String,System.Collections.IEnumerable,System.String)">
      <summary>Provides data points and series attributes for the chart.</summary>
      <returns>The chart.</returns>
      <param name="name">The unique name of the series.</param>
      <param name="chartType">The chart type of a series.</param>
      <param name="chartArea">The name of the chart area that is used to plot the data series.</param>
      <param name="axisLabel">The axis label text for the series.</param>
      <param name="legend">The name of the series that is associated with the legend.</param>
      <param name="markerStep">The granularity of data point markers.</param>
      <param name="xValue">The values to plot along the x-axis.</param>
      <param name="xField">The name of the field for x-values.</param>
      <param name="yValues">The values to plot along the y-axis.</param>
      <param name="yFields">A comma-separated list of name or names of the field or fields for y-values.</param>
    </member>
    <member name="M:System.Web.Helpers.Chart.AddTitle(System.String,System.String)">
      <summary>Adds a title to the chart.</summary>
      <returns>The chart.</returns>
      <param name="text">The title text.</param>
      <param name="name">The unique name of the title.</param>
    </member>
    <member name="M:System.Web.Helpers.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String,System.String)">
      <summary>Binds a chart to a data table, where one series is created for each unique value in a column.</summary>
      <returns>The chart.</returns>
      <param name="dataSource">The chart data source.</param>
      <param name="groupByField">The name of the column that is used to group data into the series.</param>
      <param name="xField">The name of the column for x-values.</param>
      <param name="yFields">A comma-separated list of names of the columns for y-values.</param>
      <param name="otherFields">Other data point properties that can be bound.</param>
      <param name="pointSortOrder">The order in which the series will be sorted. The default is "Ascending".</param>
    </member>
    <member name="M:System.Web.Helpers.Chart.DataBindTable(System.Collections.IEnumerable,System.String)">
      <summary>Creates and binds series data to the specified data table, and optionally populates multiple x-values.</summary>
      <returns>The chart.</returns>
      <param name="dataSource">The chart data source. This can be can be any <see cref="T:System.Collections.IEnumerable" /> object.</param>
      <param name="xField">The name of the table column used for the series x-values.</param>
    </member>
    <member name="P:System.Web.Helpers.Chart.FileName">
      <summary>Gets or sets the name of the file that contains the chart image.</summary>
      <returns>The name of the file.</returns>
    </member>
    <member name="M:System.Web.Helpers.Chart.GetBytes(System.String)">
      <summary>Returns a chart image as a byte array.</summary>
      <returns>The chart.</returns>
      <param name="format">The image format. The default is "jpeg".</param>
    </member>
    <member name="M:System.Web.Helpers.Chart.GetFromCache(System.String)">
      <summary>Retrieves the specified chart from the cache.</summary>
      <returns>The chart.</returns>
      <param name="key">The ID of the cache item that contains the chart to retrieve. The key is set when you call the <see cref="M:System.Web.Helpers.Chart.SaveToCache(System.String,System.Int32,System.Boolean)" /> method.</param>
    </member>
    <member name="P:System.Web.Helpers.Chart.Height">
      <summary>Gets or sets the height, in pixels, of the chart image.</summary>
      <returns>The chart height.</returns>
    </member>
    <member name="M:System.Web.Helpers.Chart.Save(System.String,System.String)">
      <summary>Saves a chart image to the specified file.</summary>
      <returns>The chart.</returns>
      <param name="path">The location and name of the image file.</param>
      <param name="format">The image file format, such as "png" or "jpeg".</param>
    </member>
    <member name="M:System.Web.Helpers.Chart.SaveToCache(System.String,System.Int32,System.Boolean)">
      <summary>Saves a chart in the system cache.</summary>
      <returns>The ID of the cache item that contains the chart.</returns>
      <param name="key">The ID of the chart in the cache.</param>
      <param name="minutesToCache">The number of minutes to keep the chart image in the cache. The default is 20.</param>
      <param name="slidingExpiration">true to indicate that the chart cache item's expiration is reset each time the item is accessed, or false to indicate that the expiration is based on an absolute interval since the time that the item was added to the cache. The default is true.</param>
    </member>
    <member name="M:System.Web.Helpers.Chart.SaveXml(System.String)">
      <summary>Saves a chart as an XML file.</summary>
      <returns>The chart.</returns>
      <param name="path">The path and name of the XML file.</param>
    </member>
    <member name="M:System.Web.Helpers.Chart.SetXAxis(System.String,System.Double,System.Double)">
      <summary>Sets values for the horizontal axis.</summary>
      <returns>The chart.</returns>
      <param name="title">The title of the x-axis.</param>
      <param name="min">The minimum value for the x-axis.</param>
      <param name="max">The maximum value for the x-axis.</param>
    </member>
    <member name="M:System.Web.Helpers.Chart.SetYAxis(System.String,System.Double,System.Double)">
      <summary>Sets values for the vertical axis.</summary>
      <returns>The chart.</returns>
      <param name="title">The title of the y-axis.</param>
      <param name="min">The minimum value for the y-axis.</param>
      <param name="max">The maximum value for the y-axis.</param>
    </member>
    <member name="M:System.Web.Helpers.Chart.ToWebImage(System.String)">
      <summary>Creates a <see cref="T:System.Web.Helpers.WebImage" /> object based on the current <see cref="T:System.Web.Helpers.Chart" /> object.</summary>
      <returns>The chart.</returns>
      <param name="format">The format of the image to save the <see cref="T:System.Web.Helpers.WebImage" /> object as. The default is "jpeg". The <paramref name="format" /> parameter is not case sensitive.</param>
    </member>
    <member name="P:System.Web.Helpers.Chart.Width">
      <summary>Gets or set the width, in pixels, of the chart image.</summary>
      <returns>The chart width.</returns>
    </member>
    <member name="M:System.Web.Helpers.Chart.Write(System.String)">
      <summary>Renders the output of the <see cref="T:System.Web.Helpers.Chart" /> object as an image.</summary>
      <returns>The chart.</returns>
      <param name="format">The format of the image. The default is "jpeg".</param>
    </member>
    <member name="M:System.Web.Helpers.Chart.WriteFromCache(System.String,System.String)">
      <summary>Renders the output of a <see cref="T:System.Web.Helpers.Chart" /> object that has been cached as an image.</summary>
      <returns>The chart.</returns>
      <param name="key">The ID of the chart in the cache.</param>
      <param name="format">The format of the image. The default is "jpeg".</param>
    </member>
    <member name="T:System.Web.Helpers.ChartTheme">
      <summary>Specifies visual themes for a <see cref="T:System.Web.Helpers.Chart" /> object.</summary>
    </member>
    <member name="F:System.Web.Helpers.ChartTheme.Blue">
      <summary>A theme for 2D charting that features a visual container with a blue gradient, rounded edges, drop-shadowing, and high-contrast gridlines.</summary>
    </member>
    <member name="F:System.Web.Helpers.ChartTheme.Green">
      <summary>A theme for 2D charting that features a visual container with a green gradient, rounded edges, drop-shadowing, and low-contrast gridlines.</summary>
    </member>
    <member name="F:System.Web.Helpers.ChartTheme.Vanilla">
      <summary>A theme for 2D charting that features no visual container and no gridlines.</summary>
    </member>
    <member name="F:System.Web.Helpers.ChartTheme.Vanilla3D">
      <summary>A theme for 3D charting that features no visual container, limited labeling and, sparse, high-contrast gridlines.</summary>
    </member>
    <member name="F:System.Web.Helpers.ChartTheme.Yellow">
      <summary>A theme for 2D charting that features a visual container that has a yellow gradient, rounded edges, drop-shadowing, and high-contrast gridlines.</summary>
    </member>
    <member name="T:System.Web.Helpers.Crypto">
      <summary>Provides methods to generate hash values and encrypt passwords or other sensitive data.</summary>
    </member>
    <member name="M:System.Web.Helpers.Crypto.GenerateSalt(System.Int32)">
      <summary>Generates a cryptographically strong sequence of random byte values.</summary>
      <returns>The generated salt value as a base-64-encoded string.</returns>
      <param name="byteLength">The number of cryptographically random bytes to generate.</param>
    </member>
    <member name="M:System.Web.Helpers.Crypto.Hash(System.Byte[],System.String)">
      <summary>Returns a hash value for the specified byte array.</summary>
      <returns>The hash value for <paramref name="input" /> as a string of hexadecimal characters.</returns>
      <param name="input">The data to provide a hash value for.</param>
      <param name="algorithm">The algorithm that is used to generate the hash value. The default is "sha256".</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
    </member>
    <member name="M:System.Web.Helpers.Crypto.Hash(System.String,System.String)">
      <summary>Returns a hash value for the specified string.</summary>
      <returns>The hash value for <paramref name="input" /> as a string of hexadecimal characters.</returns>
      <param name="input">The data to provide a hash value for.</param>
      <param name="algorithm">The algorithm that is used to generate the hash value. The default is "sha256".</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
    </member>
    <member name="M:System.Web.Helpers.Crypto.HashPassword(System.String)">
      <summary>Returns an RFC 2898 hash value for the specified password.</summary>
      <returns>The hash value for <paramref name="password" /> as a base-64-encoded string.</returns>
      <param name="password">The password to generate a hash value for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="password" /> is null.</exception>
    </member>
    <member name="M:System.Web.Helpers.Crypto.SHA1(System.String)">
      <summary>Returns a SHA-1 hash value for the specified string.</summary>
      <returns>The SHA-1 hash value for <paramref name="input" /> as a string of hexadecimal characters.</returns>
      <param name="input">The data to provide a hash value for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
    </member>
    <member name="M:System.Web.Helpers.Crypto.SHA256(System.String)">
      <summary>Returns a SHA-256 hash value for the specified string.</summary>
      <returns>The SHA-256 hash value for <paramref name="input" /> as a string of hexadecimal characters.</returns>
      <param name="input">The data to provide a hash value for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
    </member>
    <member name="M:System.Web.Helpers.Crypto.VerifyHashedPassword(System.String,System.String)">
      <summary>Determines whether the specified RFC 2898 hash and password are a cryptographic match.</summary>
      <returns>true if the hash value is a cryptographic match for the password; otherwise, false.</returns>
      <param name="hashedPassword">The previously-computed RFC 2898 hash value as a base-64-encoded string.</param>
      <param name="password">The plaintext password to cryptographically compare with <paramref name="hashedPassword" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hashedPassword" /> or <paramref name="password" /> is null.</exception>
    </member>
    <member name="T:System.Web.Helpers.DynamicJsonArray">
      <summary>Represents a series of values as a JavaScript-like array by using the dynamic capabilities of the Dynamic Language Runtime (DLR).</summary>
    </member>
    <member name="M:System.Web.Helpers.DynamicJsonArray.#ctor(System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Helpers.DynamicJsonArray" /> class using the specified array element values.</summary>
      <param name="arrayValues">An array of objects that contains the values to add to the <see cref="T:System.Web.Helpers.DynamicJsonArray" /> instance.</param>
    </member>
    <member name="M:System.Web.Helpers.DynamicJsonArray.GetEnumerator">
      <summary>Returns an enumerator that can be used to iterate through the elements of the <see cref="T:System.Web.Helpers.DynamicJsonArray" /> instance.</summary>
      <returns>An enumerator that can be used to iterate through the elements of the JSON array.</returns>
    </member>
    <member name="P:System.Web.Helpers.DynamicJsonArray.Item(System.Int32)">
      <summary>Returns the value at the specified index in the <see cref="T:System.Web.Helpers.DynamicJsonArray" /> instance.</summary>
      <returns>The value at the specified index.</returns>
    </member>
    <member name="P:System.Web.Helpers.DynamicJsonArray.Length">
      <summary>Returns the number of elements in the <see cref="T:System.Web.Helpers.DynamicJsonArray" /> instance.</summary>
      <returns>The number of elements in the JSON array.</returns>
    </member>
    <member name="M:System.Web.Helpers.DynamicJsonArray.op_Implicit(System.Web.Helpers.DynamicJsonArray)~System.Object[]">
      <summary>Converts a <see cref="T:System.Web.Helpers.DynamicJsonArray" /> instance to an array of objects.</summary>
      <returns>The array of objects that represents the JSON array.</returns>
      <param name="obj">The JSON array to convert.</param>
    </member>
    <member name="M:System.Web.Helpers.DynamicJsonArray.op_Implicit(System.Web.Helpers.DynamicJsonArray)~System.Array">
      <summary>Converts a <see cref="T:System.Web.Helpers.DynamicJsonArray" /> instance to an array of objects.</summary>
      <returns>The array of objects that represents the JSON array.</returns>
      <param name="obj">The JSON array to convert.</param>
    </member>
    <member name="M:System.W